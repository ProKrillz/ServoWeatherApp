@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using MudBlazor.Components.Chart.Models
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using Dialog
@using ServoWeatherService.Models;
@using ServoWeatherService.Services.Interfaces;
@using System.Security.Claims
@inject IUserService _userService;
@inject IDialogService DialogService
@inject SignInManager<IdentityUser> SignInManager;
@inject AuthenticationStateProvider StateProvider;
@inject NavigationManager Navigation;



@page "/"

<PageTitle>Home</PageTitle>

<AuthorizeView Context="MainLogin">
    <NotAuthorized>
        <div class="login-form">
            <h2>Login</h2>

            <EditForm Model="user" OnValidSubmit="OnValidSubmit" method="post" FormName="Login">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Email</label>
                    <InputText Label="Email" Class="blazor-input mt-3" @bind-Value="user.Email" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <InputText type="password" Label="Password" Class="blazor-input mt-3" @bind-Value="user.Password" />
                </div>
                <div class="form-actions">

                <button class="blazor-button" type="submit">Login</button>
                <a class="blazor-button mt-3" href="/SignUp">Sign Up</a>
                </div>

                @* <button Class="ms-2" Variant="Variant.Filled" Color="Color.Primary" @onclick="OpenDialogAsync">Sign up</button> *@
            </EditForm>
        </div>

    </NotAuthorized>
    <Authorized>
        <TelemetryComponent/>
        <ServoMotorControl/>
    </Authorized>
</AuthorizeView>
<style>
    .pointer {
        cursor: pointer;
    }

    .blazor-button {
        display: inline-block;
        padding: 0.5rem 1rem; /* Adjust for your needs */
        font-size: 1rem;
        font-weight: 600;
        color: #ffffff;
        background-color: #0078d4; /* Primary color similar to Blazor's default */
        border: none;
        border-radius: 0.375rem; /* Rounded corners */
        text-align: center;
        cursor: pointer;
        transition: background-color 0.3s ease, box-shadow 0.2s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        /* Hover Effect */
        .blazor-button:hover {
            background-color: #005a9e; /* Darker shade of primary color */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

        /* Focus Effect */
        .blazor-button:focus {
            outline: none;
            box-shadow: 0 0 0 4px rgba(0, 120, 212, 0.3); /* Accessible focus ring */
        }

    .blazor-input {
        display: block;
        width: 100%; /* Adjust to your layout needs */
        padding: 0.5rem;
        font-size: 1rem;
        font-weight: 400;
        color: #323130;
        background-color: #ffffff;
        border: 1px solid #d1d1d1; /* Neutral border color */
        border-radius: 0.375rem; /* Match button radius */
        transition: border-color 0.3s ease, box-shadow 0.2s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

        /* Hover Effect */
        .blazor-input:hover {
            border-color: #0078d4; /* Match button primary color */
            box-shadow: 0 2px 6px rgba(0, 120, 212, 0.2);
        }

        /* Focus Effect */
        .blazor-input:focus {
            outline: none;
            border-color: #005a9e; /* Match button hover color */
            box-shadow: 0 0 0 4px rgba(0, 120, 212, 0.3); /* Accessible focus ring */
        }
    /* Login Form Container */
    .login-form {
        width: 100%;
        max-width: 400px;
        margin: 2rem auto;
        padding: 2rem;
        background-color: #ffffff;
        border: 1px solid #d1d1d1;
        border-radius: 0.5rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

    /* Title */
    .login-title {
        margin-bottom: 1.5rem;
        font-size: 1.5rem;
        font-weight: 600;
        color: #323130;
    }

    /* Form Groups */
    .form-group {
        margin-bottom: 1.5rem;
        text-align: left;
    }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-size: 0.875rem;
            color: #5a5a5a;
            font-weight: 500;
        }

    /* Form Actions */
    .form-actions {
        margin-top: 1.5rem;
    }

    /* Login Footer */
    .login-footer {
        margin-top: 1.5rem;
        font-size: 0.875rem;
        color: #5a5a5a;
    }

        .login-footer .login-link {
            color: #0078d4;
            text-decoration: none;
        }

            .login-footer .login-link:hover {
                text-decoration: underline;
            }

    /* Use Button and Input Styles */
    .blazor-input {
        width: 100%;
        display: block;
    }

    .blazor-button {
        width: 100%;
    }

</style>

@code {
    [SupplyParameterFromForm]
    public UserLogin user { set; get; } = new();

    bool success;

    LoginToken loginToken = new();

    protected override async Task OnInitializedAsync()
    {
        ClaimsPrincipal user = (await StateProvider.GetAuthenticationStateAsync()).User;
    }

    private async Task OnValidSubmit()
    {
        var result = await SignInManager.PasswordSignInAsync(user.Email, user.Password, false, false);
        //loginToken = await _userService.UserLoginAsync(user);
        //await _localStorage.SetItemAsync("TokenOfDoom", loginToken);
        Navigation.NavigateTo("/",true);

    }
    private Task OpenDialogAsync()
    {
        var options = new DialogOptions { MaxWidth = MaxWidth.Small, FullWidth = true, CloseOnEscapeKey = true };

        return DialogService.ShowAsync<SignUpDialog>("Sign up", options);
    }
}